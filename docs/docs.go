// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2018-06-06 22:02:29.837362776 +0800 CST m=+0.107684180

package docs

import (
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "contact": {},
        "license": {}
    },
    "paths": {
        "/api/admin/auth/nodes": {
            "get": {
                "description": "get node list",
                "produces": [
                    "application/json"
                ],
                "summary": "get node list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"success\":false,\"message\":\"error message\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "add node",
                "produces": [
                    "application/json"
                ],
                "summary": "add node",
                "parameters": [
                    {
                        "description": "请求参数",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.AddNodeReq"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"success\":false,\"message\":\"error message\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/admin/auth/nodes/": {
            "put": {
                "description": "update a node",
                "produces": [
                    "application/json"
                ],
                "summary": "update a node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "请求参数",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.UpdateNodeReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"success\":false,\"message\":\"error message\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a node",
                "produces": [
                    "application/json"
                ],
                "summary": "delete a node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"success\":false,\"message\":\"error message\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/user/auth/info": {
            "get": {
                "description": "get user info",
                "produces": [
                    "application/json"
                ],
                "summary": "get user info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"success\":false,\"message\":\"error message\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/user/auth/service/config": {
            "get": {
                "description": "get user info",
                "produces": [
                    "application/json"
                ],
                "summary": "get user info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ServiceConfig"
                        }
                    }
                }
            }
        },
        "/api/user/auth/service/create": {
            "post": {
                "description": "create service",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "create service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "method",
                        "name": "method",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "server-type",
                        "name": "server-type",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"success\":false,\"message\":\"error message\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "description": "user login",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "user login",
                "parameters": [
                    {
                        "type": "file",
                        "description": "username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"success\":false,\"message\":\"error message\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/user/signup": {
            "post": {
                "description": "user signup",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "user signup",
                "parameters": [
                    {
                        "type": "file",
                        "description": "invite-code",
                        "name": "invite-code",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "confirm-password",
                        "name": "confirm-password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"success\":false,\"message\":\"error message\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AddNodeReq": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.NodeResp": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.ServiceConfig": {
            "type": "object",
            "properties": {
                "servers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ssMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ssrMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.ServiceResult": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string"
                },
                "packageLimit": {
                    "type": "integer"
                },
                "serviceId": {
                    "type": "string"
                },
                "servicePort": {
                    "type": "integer"
                },
                "servicePwd": {
                    "type": "string"
                }
            }
        },
        "models.UpdateNodeReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "models.UserInfo": {
            "type": "object",
            "properties": {
                "expired": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "packageLeft": {
                    "type": "string"
                },
                "packageLeftPercent": {
                    "type": "string"
                },
                "packageLimit": {
                    "type": "integer"
                },
                "packageUsed": {
                    "type": "string"
                },
                "serviceMethod": {
                    "type": "string"
                },
                "servicePort": {
                    "type": "integer"
                },
                "servicePwd": {
                    "type": "string"
                },
                "serviceType": {
                    "type": "string"
                },
                "serviceURL": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

type s struct{}

func (s *s) ReadDoc() string {
	return doc
}
func init() {
	swag.Register(swag.Name, &s{})
}
